//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCDatabaseFirstApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCEntities : DbContext
    {
        public MVCEntities()
            : base("name=MVCEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<PRODUCT> PRODUCTs { get; set; }
    
        public virtual int ADDPRODUCT(string pRODID, string pRODNAME, Nullable<int> pRODPRICE, string cATEID)
        {
            var pRODIDParameter = pRODID != null ?
                new ObjectParameter("PRODID", pRODID) :
                new ObjectParameter("PRODID", typeof(string));
    
            var pRODNAMEParameter = pRODNAME != null ?
                new ObjectParameter("PRODNAME", pRODNAME) :
                new ObjectParameter("PRODNAME", typeof(string));
    
            var pRODPRICEParameter = pRODPRICE.HasValue ?
                new ObjectParameter("PRODPRICE", pRODPRICE) :
                new ObjectParameter("PRODPRICE", typeof(int));
    
            var cATEIDParameter = cATEID != null ?
                new ObjectParameter("CATEID", cATEID) :
                new ObjectParameter("CATEID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADDPRODUCT", pRODIDParameter, pRODNAMEParameter, pRODPRICEParameter, cATEIDParameter);
        }
    }
}
